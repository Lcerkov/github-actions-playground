---
name: Update Skeleton JSON

on:
  push:
    branches:
      - testing/commit_on_merge_base

env:
  WORKING_BRANCH_NAME: update_json_file
  GIT_USER: ${{ fromJson(secrets.GIT_AUTHOR_INFORMATION).user.name }}
  GIT_EMAIL: ${{ fromJson(secrets.GIT_AUTHOR_INFORMATION).user.email }}

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      git_author: ${{ steps.git-config.outputs.author }}
      git_email: ${{ steps.git-config.outputs.email }}
      git_user: ${{ steps.git-config.outputs.user }}
    steps:
      - id: git-config
        run: |
          echo "::set-output name=author::$GIT_USER <$GIT_EMAIL>"
          echo "::set-output name=email::$GIT_EMAIL"
          echo "::set-output name=user::$GIT_USER"
        env:
          GIT_EMAIL: ${{ fromJson(secrets.GIT_AUTHOR_INFORMATION).user.email }}
          GIT_USER: ${{ fromJson(secrets.GIT_AUTHOR_INFORMATION).user.name }}
  update_json:
    runs-on: ubuntu-latest
    needs: setup
    outputs:
      # If changes are detected then a JSON will be pushed.
      json_pushed: ${{ steps.commit-json-for-testing.outputs.changes_detected }}
    # Don't run if we're seeing a push to add an updated JSON
    if: github.actor != needs.setup.outputs.git_user
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.CISAGOVBOT_PAT }}
      - id: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Update Python base packages
        run: python -m pip install --upgrade pip setuptools wheel
      - name: Install dependencies
        run: pip install --upgrade --requirement scripts/requirements.txt
      - name: Generate a JSON from the manually maintained YAML file
        run: python3 scripts/generate_json.py data/content.yml data/content.json
      - name: Create the branch for test validation
        run: git switch --create ${{ env.WORKING_BRANCH_NAME }}
      - id: commit-json-for-testing
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          branch: ${{ env.WORKING_BRANCH_NAME }}
          commit_message: Generate an updated JSON file
          commit_user_name: ${{ needs.setup.outputs.git_user }}
          commit_user_email: ${{ needs.setup.outputs.git_email }}
          commit_author: ${{ needs.setup.outputs.git_author }}
          file_pattern: data/content.json
  merge_json:
    runs-on: ubuntu-latest
    needs:
      - setup
      - update_json
    if: needs.update_json.outputs.json_pushed == 'true'
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.CISAGOVBOT_PAT }}
      - name: Configure git
        run: |
          git config user.name "${{ needs.setup.outputs.git_user }}"
          git config user.email "${{ needs.setup.outputs.git_email }}"
      - uses: lewagon/wait-on-check-action@v1.0.0
        with:
          check-name: lint
          ref: ${{ env.WORKING_BRANCH_NAME }}
          repo-token: ${{ github.token }}
      - name: Merge the testing branch
        run: |
          git fetch
          git merge origin/${{ env.WORKING_BRANCH_NAME }}
          git push
      - name: Cleanup testing branch
        run: git push -d origin ${{ env.WORKING_BRANCH_NAME }}
